#!/bin/bash

Usage()
{   
cat << EOF
Expect opencl in current dir ...
EOF
}   

Clean()
{
  :
}

Abort()
{
  Clean; exit 10
}

#this need to be sourced you can not trap the current shell sginal 
#trap Abort 2 3 9 15

gtre() {
  echo "_________________________________________________________________________________"
  echo
  echo "                     AOCHOME=$AOCHOME" 
  echo
  echo "_________________________________________________________________________________"
  echo
}

stre() {
  if [ ! -d ./opencl ]
  then
    Usage 
    #this need to be sourced you can not exit 
    #exit 1
  else 
    if [ ! -z "${_platform}" ]
    then
      case ${_platform} in
        *86_64*inux*)
          if [ -d ./opencl ]
          then 
            export AOCHOME=`pwd`

            export PATH=`pwd`/opencl/bin/x86_64:$PATH

            export C_INCLUDE_PATH=`pwd`/opencl/include:$C_INCLUDE_PATH
            export CPLUS_INCLUDE_PATH=`pwd`/opencl/include:$CPLUS_INCLUDE_PATH
            
            export LIBRARY_PATH=`pwd`/opencl/lib/x86_64:$LIBRARY_PATH
            export LD_LIBRARY_PATH=`pwd`/opencl/lib/x86_64:$LD_LIBRARY_PATH
          fi
          ;;
        *)
          #default to ?
          echo $_platform not supported
          ;;
      esac
    else
      echo "ENV var _platform has to be set from config.guess."
      echo "for example: export _platform=\`./config.guess\`"
    fi
  fi
}

Target=$1

################################################################################
# Depending if the setting can be applied to the current shell ...
################################################################################

if [[ ! -z "${BASH_VERSINFO[0]}" && "${BASH_VERSINFO[0]}" -ge "3" ]]
then
  # This is a bash 3.x feature
  if [ $BASH_SOURCE == $0 ]
  then
    gtre
  else
    stre 
  fi;
else
  #echo BASH $BASH_VERSION
  COMMAND=$(basename $0)
  if [[ "$COMMAND" == "setkm" ]]
  then
    #this is done as a direct invocation 
    gtre
  else
    #assume this is done through source
    stre
  fi
fi

