#!/bin/bash

Usage()
{
cat << EOF
Expect llvm in current dir ...
EOF
}

Clean()
{
  :
}

Abort()
{
  Clean; exit 10
}

#this need to be sourced you can not trap the current shell sginal
#trap Abort 2 3 9 15

gtre() {
  echo "_________________________________________________________________________________"
  echo
  echo "          OMP_LLVMHOME=$OMP_LLVMHOME"
  echo "          OCL_LLVMHOME=$OCL_LLVMHOME"
  echo
  echo "        CLANG_OMP_PATH=$CLANG_OMP_PATH"
  echo "        CLANG_OCL_PATH=$CLANG_OCL_PATH"
  if [ ! -z "$LLVMHOME" ]
  then
  echo "                 CLANG="`type -P clang`
  echo
  echo "        BITCODE_HEADER="`echo $BITCODE_HEADER | cut -d : -f 1,2`
  echo "       BITCODE_LIBRARY="`echo $BITCODE_LIBRARY | cut -d : -f 1,2`
  echo
  echo "        C_INCLUDE_PATH="`echo $C_INCLUDE_PATH | cut -d : -f 1,2,3,4,5`
  echo "    CPLUS_INCLUDE_PATH="`echo $CPLUS_INCLUDE_PATH | cut -d : -f 1,2,3,4,5`
  echo
  echo "          LIBRARY_PATH="`echo $LIBRARY_PATH | cut -d : -f 1,2,3,4,5`
  echo "  BITCODE_LIBRARY_PATH="`echo $BITCODE_LIBRARY_PATH | cut -d : -f 1,2,3`
  echo
  echo "       LD_LIBRARY_PATH="`echo $LD_LIBRARY_PATH | cut -d : -f 1,2,3,4,5`
  echo
  fi

  echo

  if [ ! -z "$XCOMPILE" ]
  then
  echo "                    XCOMPILE=$XCOMPILE"
  echo "                    XTARGETS=$XTARGETS"
  echo
  fi

#  echo "                     ASSUMES=$ASSUMES"
#  echo "                VERBOSE_MAKE=$VERBOSE_MAKE"
#  echo "                     ABSPATH=$ABSPATH"
#  echo "                     DEFAULT=$DEFAULT"

#  echo "_________________________________________________________________________________"
#  echo
#  echo "                      TRTEST=$TRTEST"
#  echo "                 TRTESTUTILS=$TRTESTUTILS"
#  if [ ! -z "$PERL5LIB" ]
#  then
#  echo "                    PERL5LIB=$PERL5LIB"
#  fi
  echo "_________________________________________________________________________________"
  echo
}

stre() {
  if [ ! -d ./llvm ]
  then
    Usage
    #this need to be sourced you can not exit
    #exit 1
  else
    if [ ! -z "${_platform}" ]
    then
      case ${_platform} in
        *cygwin*)
          echo no ready ...
          return

          if [ "$Target" == "test" ]
          then
            export TRTEST=`cygpath -wa .`
            export TRTESTUTILS="$(cygpath -wa $(dirname $(type -P bash)))"
          else
            if [ -d ./codegen ]
            then
              # in source root
              export TRHOME=$(dirname $(cygpath -wa .))
              SRCROOT=$(basename $(cygpath -wa .))
            else
              if [ ! -d ./tr.source ]
              then
                echo "missing source root, assuming in the current dir as tr.source"
              fi
              export TRHOME=`cygpath -wa .`
              SRCROOT=tr.source
            fi

            export TRSRC="$TRHOME\\$SRCROOT"

            if [ -x `cygpath -u "$TRHOME\\jre\\bin\\java"` ]
            then
              export J9_EXEC="$TRHOME\jre\bin"

              case $Target in
                64)
                  export J9SRC="$TRHOME\jre\bin\compressedrefs"
                  source setvc10 64
                  export PLATFORM=amd64-win64-mvs
                  export _NT_DEBUGGER_EXTENSION_PATH="$TRHOME\\jre\\bin\\compressedrefs"
                  ;;
                64nc)
                  export J9SRC="$TRHOME\jre\bin\default"
                  source setvc10 64
                  export PLATFORM=amd64-win64-mvs
                  export _NT_DEBUGGER_EXTENSION_PATH="$TRHOME\\jre\\bin\\default"
                  ;;
                32)
                  export J9SRC="$TRHOME\jre\bin\default"
                  source setvc10 32
                  export PLATFORM=ia32-win32-mvs
                  export _NT_DEBUGGER_EXTENSION_PATH="$TRHOME\\jre\\bin\\default"
                  ;;
                *)
                  Usage
                  #this need to be sourced you can not exit
                  #exit 2
                  ;;
              esac

              export _java_path="$J9_EXEC"
              export PATH="`cygpath -u $J9_EXEC`":"`cygpath -u $TRHOME/bin`":$PATH


              case $Target in
                64*)
                  export _windbg_path=`cygpath -wa "$_cygdrive_path_prefix/c/Program Files/Debugging Tools for Windows (x64)"`
                  export PATH="$_cygdrive_path_prefix/c/Program Files/Debugging Tools for Windows (x64)":$PATH
                  ;;
                32)
                  export _windbg_path=`cygpath -wa "$_cygdrive_path_prefix/c/Program Files (x86)/Debugging Tools for Windows (x86)"`
                  export PATH="$_cygdrive_path_prefix/c/Program Files (x86)/Debugging Tools for Windows (x86)":$PATH
                  ;;
                *)
                  ;;
              esac

              export ASSUMES=
              export VERBOSE_MAKE=1
              export ABSPATH=1
              export DEFAULT=debug

              export XCOMPILE=0
            else
              export J9_EXEC=
              export J9SRC=

              case $Target in
                64)
                  source setvc10 64
                  export PLATFORM=amd64-win64-mvs
                  ;;
                32)
                  source setvc10 32
                  export PLATFORM=ia32-win32-mvs
                  ;;
                *)
                  echo no support yet.
                  Usage
                  #this need to be sourced you can not exit
                  #exit 2
                  ;;
              esac

              case $Target in
                64*)
                  export _windbg_path=`cygpath -wa "$_cygdrive_path_prefix/c/Program Files/Debugging Tools for Windows (x64)"`
                  export PATH="$_cygdrive_path_prefix/c/Program Files/Debugging Tools for Windows (x64)":$PATH
                  ;;
                32)
                  export _windbg_path=`cygpath -wa "$_cygdrive_path_prefix/c/Program Files (x86)/Debugging Tools for Windows (x86)"`
                  export PATH="$_cygdrive_path_prefix/c/Program Files (x86)/Debugging Tools for Windows (x86)":$PATH
                  ;;
                *)
                  ;;
              esac

              export ASSUMES=1
              export VERBOSE_MAKE=1
              export ABSPATH=1
              export DEFAULT=staticdebug

              export XCOMPILE=1
              export XTARGETS=s390
            fi

            if [ -d "$TRHOME\tr.tools\bldtools" ]
            then
              export TRBLD_DIR="$TRHOME\tr.tools\bldtools"
              #export PERL5LIB="$TRBLD_DIR/perllib:$PERL5LIB"
            fi
          fi
          ;;
        *powerpc*)
          ;;
        *86*inux*)
          if [ -d ./llvm ]
          then
            export LLVMHOME=`pwd`/llvm
          fi

          if [ -x ./ebuild ]
          then
            export PATH=`pwd`/ebuild/bin:$PATH
            export CLANG_LLVM_PATH=`pwd`/ebuild/bin
          fi

          ##################################
          if [ -d ./libclc ]
          then
            export OCL_LLVMHOME=`pwd`/llvm
            if [ -x ./ebuild ]
            then
              export CLANG_OCL_PATH=`pwd`/ebuild/bin
            fi
          fi
          if [ -d ./libclc ]
          then
            export BITCODE_HEADER=`pwd`/libclc/usr/local/include/clc/clc.h
            export BITCODE_LIBRARY=`pwd`/libclc/usr/local/lib/clc/tahiti-amdgcn--.bc

            export C_INCLUDE_PATH=`pwd`/libclc/usr/local/include:$C_INCLUDE_PATH
            export CPLUS_INCLUDE_PATH=`pwd`/libclc/usr/local/include:$CPLUS_INCLUDE_PATH
          fi

          ##################################
          if [ -d ./openmp ]
          then
            export OMP_LLVMHOME=`pwd`/llvm
            if [ -x ./ebuild ]
            then
              export CLANG_OMP_PATH=`pwd`/ebuild/bin
            fi
          fi
          if [ -d ./openmp/rbuild ]
          then
            export C_INCLUDE_PATH=`pwd`/openmp/rbuild/src:$C_INCLUDE_PATH
            export CPLUS_INCLUDE_PATH=`pwd`/openmp/rbuild/src:$CPLUS_INCLUDE_PATH

            export LIBRARY_PATH=`pwd`/openmp/rbuild/src:$LIBRARY_PATH
            export LD_LIBRARY_PATH=`pwd`/openmp/rbuild/src:$LD_LIBRARY_PATH
          fi

          if [ -d ./openmp/tbuild ]
          then
            export LIBRARY_PATH=`pwd`/openmp/tbuild/lib:$LIBRARY_PATH
            export BITCODE_LIBRARY_PATH=`pwd`/openmp/tbuild/lib:$BITCODE_LIBRARY_PATH
            export LD_LIBRARY_PATH=`pwd`/openmp/tbuild/lib:$LD_LIBRARY_PATH
          fi
          ;;
        *)
          #default to ?
          echo $_platform not supported
          ;;
      esac
    else
      echo "ENV var _platform has to be set from config.guess."
      echo "for example: export _platform=\`./config.guess\`"
    fi
  fi
}

Target=$1

################################################################################
# Depending if the setting can be applied to the current shell ...
################################################################################

if [[ ! -z "${BASH_VERSINFO[0]}" && "${BASH_VERSINFO[0]}" -ge "3" ]]
then
  # This is a bash 3.x feature
  if [ $BASH_SOURCE == $0 ]
  then
    gtre
  else
    stre
  fi;
else
  #echo BASH $BASH_VERSION
  COMMAND=$(basename $0)
  if [[ "$COMMAND" == "setclomp" ]]
  then
    #this is done as a direct invocation
    gtre
  else
    #assume this is done through source
    stre
  fi
fi

